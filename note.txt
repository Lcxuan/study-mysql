CMD:command命令
表:table
使用数据库保存数据的三大原因:
1、大批量读取和操作数据效率高
2、数据共享方便
3、数据损坏不易丢失，易修复

reg:表示register注册
Eventlog:事件日志
excute简称EXE，执行
bin:表示binary二进制
启动服务:net start mysql
停止服务:net stop mysql
登录mysql命令:mysql -u root -p
清除命令:\c
查看系统信息:\s
创建:create

show databases:显示当前服务器中的数据
没有自建数据库之前，展示的是系统数据库
新建数据库:create database db;
查看新建数据库(含字符集):show create database db;
修改数据库字符集:alter database db character set 字符集;	//alter database db character set utf8;
进入数据库:use db;
删除数据库:drop database db;

exists:存在
在数据库中，除了数值型数据外，字符串和日期型数据都要放在一对单引号中

表的结构由字段组成，在显示表内容时，每列叫作字段(field)，每一行具体数据叫作记录(record)，设计表，就是要确定这张表有多少列，每列的数据类型是什么

DESCRIBE db_name		查看表的结构:desc表示描述
show tables		查看当前数据库中的所有表
primary  key = not null + unique

主键:唯一确定一条记录的字段或者字段组合，主键值在表中不能为空且须位移。
一张合格的表必须有 主键，且只能有一个主键(注意，不是指只能有一个字段充当主键)
-Multiple primary key defined
,
define:定义
data definition language:DDL

insert into 表名[字段列表] values(值列表)
中括号中的字段列表可以省略，省略之后，值列表必须全部给值，并且值的顺序和表结构一一对应

update 表名 set 字段名 = 新值，字段名 = 新值， 字段名 = 新值[where 条件表达式]

单表查询
语法:select *|字段列表 from 表名	//对列(垂直方向)进行筛选
where 条件表达式			//对行(水平方向)进行筛选

*|字段列表				//所有字段 或者 字段列表

distinct一般都写在select后面	select distinct...
limit一般都写在select语句的最后面 select... limit 1	limit的范围是limt[[M,]N]
limit筛选前10行 limit 10=========limit 0,10
limit 2,5 左边的limit的意思是从第3行开始，一共选5行	3-7

current:当前的
curdate():当前日期=>今天的日期

在查询结果中，用表达式计算出的列，叫作计算列，为增强可读性，一般(可以说是一定)都要为它们设置别名

不等于:<> or !=
不大于:!>
不小于:!<

between 低值 and 高值:介于低值和高值之间(含高低值)

like运算符:模糊查询，必须配合通配符使用，分别是%和_	有like必须要有通配符
%表示零个或任意多个字符
_表示1个字符

空值查询:NULL null
空值代表没有值，不存在值，它和空字符串''不同

计算字段在结果中默认用它的计算表达式作标题，可读性差，一般会在计算字段后取别名，中间加介词as

第二类聚合函数:sum、avg、max、min
这些函数的参数必须是数值型
当统计的记录完全相同时，不同的统计结果可以卸载同一句中

employee:雇员
department:部门、系
charge:掌控、主管
hire:雇佣
fire:火(炒鱿鱼)
commission:佣金
deptid:部门编号

having子句:对分组后的记录进行二次筛选，它和where的区别是，where是对表的原始记录进行初次筛选
order by子句:用于对最终结果进行排序，他只影响记录的显示顺序，并不影响记录结果

limit m:从结果中取前m条记录
limit n,m:跳过结果中前n条济洛路，取之后的m条记录
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!查询语句:
select ... from where ... group by ... having ... order by ... limit ...

练习:显示员工编号、姓名、入职日期、所在部门名称
select empid,ename,hiredate,dname from emp,dept(此句会出现笛卡尔积的问题)
多表连接查询:在多表连接查询的最初结果中，是全部一一匹配的笛卡尔积，不合逻辑的错误记录很多，为了只留下正确匹配的记录，必须加上筛选条件，表达式为:	外表.外键 = 主表.主键，这个条件可以认为是语法格式要求，它和剩下的逻辑条件之间用and运算符连接，如果逻辑条件有多个表达式，要把所有逻辑条件用括号括起来
以上连接查询也叫内连接
产生笛卡尔积的查询也叫交叉连接，使用了连接条件产生的正确结果的查询也叫内连接

表之间的记录对应关系有三种:
1.一对多:共有字段放多表，这个(些)共有字段叫外键，它的值来自于一表的主键
2.一对一
3.多对多
外键写法foreign key(外键) references 主表(主键)

对于一对多，在多的一方设计外键保存的一方的主键
对于一对一的关系，可以再任意一方设计外键保存另一方的主键作为外键
对于多对多的关系，新建一张第三方关系表，保存两张表的主键作为外键

在多表连接查询时，如果有两张以上的表，则连接条件要写多个，一般来讲，如果N个表连接查询，最少要有N-1个连接条件，这些连接条件之间，必须用and运算符连接

外连接:根据主表的前后位置不同，分为左外和右外连接;所谓外连接中的主表，就是不管连接的其它表有没有对应记录，主表中的记录全部都显示，左外就是主表在左，右外就是主表在右

<ANY等效于<MAX
<ALL等效于<MIN
>ANY等效于>MIN
>ALL等效于>MAX

带油exists关键字的子查询
它的执行方式是查看exists后的子查询有无结果，如果有，外层父查询才返回结果，相当于外层查询有where true的条件

游标:简单说就是指查询结果中的一条记录
1、定义游标
declare cur name cursor for 查询语句
2、打开游标:其实就是把查询语句执行一次
open cur name
3、获取当前游标记录(经常要循环)
fetch cur name into 变量列表
4、关闭游标
close cur_name

事务的ACID(考试要考！！！)书P216
